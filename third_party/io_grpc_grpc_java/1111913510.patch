From 1111913510c64b174f798d63ba8f27d4d1c8219d Mon Sep 17 00:00:00 2001
From: "Lukacs T. Berki" <lberki@google.com>
Date: Tue, 9 Jul 2019 13:20:10 +0200
Subject: [PATCH] Make java_grpc_library work properly with proto_library rules
 with strip_import_prefix and import_prefix.

---
 java_grpc_library.bzl | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/java_grpc_library.bzl b/java_grpc_library.bzl
index 7c1b1f2b8..edfee072d 100644
--- a/java_grpc_library.bzl
+++ b/java_grpc_library.bzl
@@ -62,5 +62,18 @@ java_rpc_toolchain = rule(
 def _path_ignoring_repository(f):
-    if len(f.owner.workspace_root) == 0:
+    # Bazel creates a _virtual_imports directory in case the .proto source files
+    # need to be accessed at a path that's different from their source path:
+    # https://github.com/bazelbuild/bazel/blob/0.27.1/src/main/java/com/google/devtools/build/lib/rules/proto/ProtoCommon.java#L289
+    #
+    # In that case, the import path of the .proto file is the path relative to
+    # the virtual imports directory of the rule in question.
+    virtual_imports = "/_virtual_imports/"
+    if virtual_imports in f.path:
+        return f.path.split(virtual_imports)[1].split("/", 1)[1]
+    elif len(f.owner.workspace_root) == 0:
+        # |f| is in the main repository
         return f.short_path
-    return f.path[f.path.find(f.owner.workspace_root) + len(f.owner.workspace_root) + 1:]
+    else:
+        # If |f| is a generated file, it will have "bazel-out/*/genfiles" prefix
+        # before "external/workspace", so we need to add the starting index of "external/workspace"
+        return f.path[f.path.find(f.owner.workspace_root) + len(f.owner.workspace_root) + 1:]
 
-- 
2.22.0.410.gd8fdbe21b5-goog

